S = CODE|COMMENT|EMPTYLINE
<CODE> = <SPACE*> (STACK-CMD|ARITHMETIC-CMD|LOGICAL-CMD|PROGRAM-FLOW|FUNCTION-DEFINITION|FUNCTION-RETURN|FUNCTION-CALL) <SPACE*> COMMENT*
SPACE = #"\s"
COMMENT = <FORWARDSLASH FORWARDSLASH> COMMENT-TEXT
COMMENT-TEXT = #".*"
FORWARDSLASH = '/'
EMPTYLINE = ''

<PROGRAM-FLOW> = LABEL|GOTO|IF-GOTO
<LABEL-NAME> = #"^[A-Za-z_\.:]\S*"
LABEL = <'label'> <SPACE+> LABEL-NAME
IF-GOTO = <'if-goto'> <SPACE+> LABEL-NAME
GOTO = <'goto'> <SPACE+> LABEL-NAME

FUNCTION-CALL = <'call'> <SPACE+> FUNCTION-NAME <SPACE+> NUMBER-OF-ARGS
FUNCTION-DEFINITION = <'function'> <SPACE+> FUNCTION-NAME <SPACE+> NUMBER-OF-LOCAL-VARS
FUNCTION-NAME = LABEL-NAME
NUMBER-OF-ARGS = NUMBER
NUMBER-OF-LOCAL-VARS = NUMBER
FUNCTION-RETURN = 'return'

STACK-CMD = (PUSH|POP) <SPACE+> SEGMENT
PUSH = <'push'>
POP = <'pop'>
SEGMENT = (ARGUMENT|LOCAL|STATIC|CONSTANT|THIS|THAT|POINTER|TEMP) <SPACE+> INDEX
ARGUMENT = <'argument'>
LOCAL = <'local'>
STATIC = <'static'>
CONSTANT = <'constant'>
THIS = <'this'>
THAT = <'that'>
POINTER = <'pointer'>
TEMP = <'temp'>
INDEX = NUMBER
<NUMBER> = #"\d+"

<ARITHMETIC-CMD> = ADD|SUB|NEG
ADD = <'add'>
SUB = <'sub'>
NEG = <'neg'>

<LOGICAL-CMD> = EQ|GT|LT|AND|OR|NOT
EQ = <'eq'>
GT = <'gt'>
LT = <'lt'>
AND = <'and'>
OR = <'or'>
NOT = <'not'>